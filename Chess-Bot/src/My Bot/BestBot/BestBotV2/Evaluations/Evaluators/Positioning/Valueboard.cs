using ChessChallenge.API;
using System.Collections.Generic;

namespace Chess_Challenge.src.My_Bot.BestBot.BestBotV2.Evaluations.Evaluators.Positioning;

internal static class Valueboard
{
    internal static readonly Dictionary<PieceType, float[]> PieceValueboards = new()
    {
        { 
            PieceType.Pawn,
            new float[]
            {
                0,  0,  0,  0,  0,  0,  0,  0,
               40, 40, 40, 40, 40, 40, 40, 40,
                8,  8, 16, 24, 24, 16,  8,  8,
                4,  4,  8, 20, 20,  8,  4,  4,
                0,  0,  0, 16, 16,  0,  0,  0,
                4, -4, -8,  0,  0, -8, -4,  4,
                4,  8,  8,-16,-16,  8,  8,  4,
                0,  0,  0,  0,  0,  0,  0,  0
            }
        },
        {
            PieceType.Knight,
            new float[]
            {
                -40,-32,-24,-24,-24,-24,-32,-40,
                -32,-16,  0,  0,  0,  0,-16,-32,
                -24,  0,  8, 12, 12,  8,  0,-24,
                -24,  4, 12, 16, 16, 12,  4,-24,
                -24,  0, 12, 16, 16, 12,  0,-24,
                -24,  4,  8, 12, 12,  8,  4,-24,
                -32,-16,  0,  4,  4,  0,-16,-32,
                -40,-32,-24,-24,-24,-24,-32,-40
            }
        },
        {
            PieceType.Bishop,
            new float[]
            {
                -20,-10,-10,-10,-10,-10,-10,-20,
                -10,  0,  0,  0,  0,  0,  0,-10,
                -10,  0,  5, 10, 10,  5,  0,-10,
                -10,  5,  5, 10, 10,  5,  5,-10,
                -10,  0, 10, 10, 10, 10,  0,-10,
                -10, 10, 10, 10, 10, 10, 10,-10,
                -10,  5,  0,  0,  0,  0,  5,-10,
                -20,-10,-10,-10,-10,-10,-10,-20
            }
        },
        /*{
            PieceType.Rook,
            new float[]
            {
                0,  0,  0,  0,  0,  0,  0,  0,
                5, 10, 10, 10, 10, 10, 10,  5,
               -5,  0,  0,  0,  0,  0,  0, -5,
               -5,  0,  0,  0,  0,  0,  0, -5,
               -5,  0,  0,  0,  0,  0,  0, -5,
               -5,  0,  0,  0,  0,  0,  0, -5,
               -5,  0,  0,  0,  0,  0,  0, -5,
                0,  0,  0,  5,  5,  0,  0,  0
            }
        },*/
        /*{
            PieceType.Queen,
            new float[]
            {
                -20,-10,-10, -5, -5,-10,-10,-20,
                -10,  0,  0,  0,  0,  0,  0,-10,
                -10,  0,  5,  5,  5,  5,  0,-10,
                 -5,  0,  5,  5,  5,  5,  0, -5,
                  0,  0,  5,  5,  5,  5,  0, -5,
                -10,  5,  5,  5,  5,  5,  0,-10,
                -10,  0,  5,  0,  0,  0,  0,-10,
                -20,-10,-10, -5, -5,-10,-10,-20
            }
        }*/
        /*
         * new float[] // King Middle Game
        {
            -30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -30,-40,-40,-50,-50,-40,-40,-30,
            -20,-30,-30,-40,-40,-30,-30,-20,
            -10,-20,-20,-20,-20,-20,-20,-10,
             20, 20,  0,  0,  0,  0, 20, 20,
             20, 30, 10,  0,  0, 10, 30, 20
        },
        new float[] // King End Game
        {
            -50,-40,-30,-20,-20,-30,-40,-50,
            -30,-20,-10,  0,  0,-10,-20,-30,
            -30,-10, 20, 30, 30, 20,-10,-30,
            -30,-10, 30, 40, 40, 30,-10,-30,
            -30,-10, 30, 40, 40, 30,-10,-30,
            -30,-10, 20, 30, 30, 20,-10,-30,
            -30,-30,  0,  0,  0,  0,-30,-30,
            -50,-30,-30,-30,-30,-30,-30,-50
        }
        */
    };
}